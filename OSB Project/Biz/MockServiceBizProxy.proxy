<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/transform/config" xmlns:con2="http://www.bea.com/wli/sb/stages/config" xmlns:con3="http://www.bea.com/wli/sb/stages/logging/config" xmlns:con4="http://www.bea.com/wli/sb/stages/routing/config">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="Mixed" xsi:type="con:MixedBindingType" xmlns:con="http://www.bea.com/wli/sb/services/bindings/config">
      <con:request type="Text"/>
      <con:response type="Text"/>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>http</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>/MockService/bizproxy/mockService</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>false</tran:all-headers>
    <tran:provider-specific>
      <http:inbound-properties/>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router>
    <con:pipeline type="request" name="PipelinePairNode_request">
      <con:stage name="getVerb">
        <con:context/>
        <con:actions>
          <con1:assign varName="httpVerb">
            <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-6143</con2:id>
            <con1:expr>
              <con2:xqueryText>$inbound/ctx:transport/ctx:request/http:http-method</con2:xqueryText>
            </con1:expr>
          </con1:assign>
          <con3:log>
            <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-6123</con2:id>
            <con3:logLevel>error</con3:logLevel>
            <con3:expr>
              <con2:xqueryText>concat($httpVerb, ' with BODY=', $body/text())</con2:xqueryText>
            </con3:expr>
            <con3:message>httpVerb</con3:message>
          </con3:log>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode_response">
      <con:stage name="stage">
        <con:context/>
        <con:actions>
          <con1:transport-headers>
            <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-6109</con2:id>
            <con1:header-set>inbound-response</con1:header-set>
            <con1:header name="Content-Type" value="expression">
              <con2:xqueryText>"application/json"</con2:xqueryText>
            </con1:header>
          </con1:transport-headers>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:flow>
      <con:pipeline-node name="PipelinePairNode">
        <con:request>PipelinePairNode_request</con:request>
        <con:response>PipelinePairNode_response</con:response>
      </con:pipeline-node>
      <con:branch-node type="condition" name="BranchNode">
        <con:context/>
        <con:branch-table variable="httpVerb">
          <con:xpath>
            <con2:xpathText>.</con2:xpathText>
          </con:xpath>
          <con:branch name="GET">
            <con:operator>equals</con:operator>
            <con:value>'GET'</con:value>
            <con:flow/>
          </con:branch>
          <con:branch name="POST">
            <con:operator>equals</con:operator>
            <con:value>'POST'</con:value>
            <con:flow>
              <con:route-node name="RouteNode">
                <con:context/>
                <con:actions>
                  <con4:route>
                    <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-60b1</con2:id>
                    <con4:service ref="OSB Project/Business/MockServiceBussiness" xsi:type="ref:BusinessServiceRef" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
                    <con4:outboundTransform>
                      <con1:transport-headers>
                        <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-6089</con2:id>
                        <con1:header-set>outbound-request</con1:header-set>
                        <con1:header name="Content-Type" value="expression">
                          <con2:xqueryText>"application/json"</con2:xqueryText>
                        </con1:header>
                        <con1:header name="Accept" value="expression">
                          <con2:xqueryText>"application/json"</con2:xqueryText>
                        </con1:header>
                      </con1:transport-headers>
                      <con1:insert varName="outbound">
                        <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-6064</con2:id>
                        <con1:location>
                          <con2:xpathText>./ctx:transport/ctx:request</con2:xpathText>
                        </con1:location>
                        <con1:where>first-child</con1:where>
                        <con1:expr>
                          <con2:xqueryText>&lt;http:http-method>POST&lt;/http:http-method></con2:xqueryText>
                        </con1:expr>
                      </con1:insert>
                      <con1:routing-options>
                        <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-604c</con2:id>
                        <con1:mode>request-response</con1:mode>
                      </con1:routing-options>
                    </con4:outboundTransform>
                    <con4:responseTransform>
                      <con3:log>
                        <con2:id>_ActionId-2027305122390687129--13bf461.1591586b8da.-6022</con2:id>
                        <con3:logLevel>info</con3:logLevel>
                        <con3:expr>
                          <con2:xqueryText>$body/text()</con2:xqueryText>
                        </con3:expr>
                        <con3:message>CreateClliService response body==</con3:message>
                      </con3:log>
                    </con4:responseTransform>
                  </con4:route>
                </con:actions>
              </con:route-node>
            </con:flow>
          </con:branch>
          <con:branch name="PUT">
            <con:operator>equals</con:operator>
            <con:value>'PUT'</con:value>
            <con:flow/>
          </con:branch>
          <con:default-branch>
            <con:flow/>
          </con:default-branch>
        </con:branch-table>
      </con:branch-node>
    </con:flow>
  </ser:router>
</xml-fragment>